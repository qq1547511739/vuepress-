{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{378:function(s,t,a){\"use strict\";a.r(t);var n=a(43),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h2\",{attrs:{id:\"http和https协议的区别\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http和https协议的区别\"}},[s._v(\"#\")]),s._v(\" HTTP和HTTPS协议的区别\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"HTTP和HTTPS协议的区别\")])]),s._v(\" \"),a(\"p\",[s._v(\"区别：\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。\")]),s._v(\" \"),a(\"li\",[s._v(\"http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。\")]),s._v(\" \"),a(\"li\",[s._v(\"http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。\")]),s._v(\" \"),a(\"li\",[s._v(\"http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。\")])]),s._v(\" \"),a(\"h2\",{attrs:{id:\"get和post请求的区别\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#get和post请求的区别\"}},[s._v(\"#\")]),s._v(\" get和post请求的区别\")]),s._v(\" \"),a(\"p\",[s._v(\"get和post都是http请求的方式\"),a(\"br\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"get请求\")])]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"GET 请求的表现形式，即请求的数据会附在 URL 之后（放在请求行中），以 ? 分割 URL 和传输数据，多个参数用 & 连接。\")]),s._v(\" \"),a(\"li\",[s._v(\"除此之外，根据 HTTP 规范，GET 用于信息获取，而且应该是安全和幂等的 。\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"安全性指的是非修改信息，即该操作用于获取信息而非修改信息。换句话说，GET请求一般不应产生副作用，也就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。\")])]),s._v(\" \"),a(\"blockquote\",[a(\"p\",[s._v(\"幂等性 (Idempotence) 则指的是无论调用这个URL 多少次，都不会有不同的结果的 HTTP 方法。而在实际过程中，这个规定没有那么严格。例如在一个新闻应用中，新闻站点的头版不断更新，虽然第二次请求会返回不同的一批新闻，该操作仍然被认为是安全的和幂等的，因为它总是返回当前的新闻。\")])]),s._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[s._v(\"GET 是会被浏览器主动缓存的，如果下一次传输的数据相同，那么就会返回缓存中的内容，以求更快地展示数据。\")]),s._v(\" \"),a(\"li\",[s._v(\"GET 方法的 URL 一般都具有长度限制，\"),a(\"strong\",[s._v(\"但是需要注意的是 HTTP 协议中并未规定 GET 请求的长度。这个长度限制主要是由浏览器和 Web 服务器所决定的，并且各个浏览器对长度的限制也各不相同。\")])]),s._v(\" \"),a(\"li\",[s._v(\"GET 方法只产生一个 TCP 数据包，浏览器会把请求头和请求数据一并发送出去，服务器响应 200 ok(返回数据)。\"),a(\"br\")])]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"post请求方式\")])]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"根据 HTTP 规范，POST 表示可能修改变服务器上的资源的请求。例如我们在刷知乎的时候对某篇文章进行点赞，就是提交的 POST 请求，因为它改变了服务器中的数据（该篇文章的点赞数）。\")]),s._v(\" \"),a(\"li\",[s._v(\"POST 方法因为有可能修改服务器上的资源，所以它是不符合安全和幂等性的。\")]),s._v(\" \"),a(\"li\",[s._v(\"从前面关于 POST 的请求报文也可以看出，POST 是将请求信息放置在请求数据中的，这也是 POST 和 GET 的一点不那么重要的区别。有一些博客的说法是 \"),a(\"strong\",[s._v(\"GET 请求的请求信息是放置在 URL 的而 POST 是放置在请求数据中的\")]),s._v(\"所以 POST 比 GET 更安全。\")]),s._v(\" \"),a(\"li\",[s._v(\"因为 POST 方法的请求信息是放置在请求数据中的，所以它的请求信息是\"),a(\"strong\",[s._v(\"没有长度限制\")]),s._v(\"的。\")]),s._v(\" \"),a(\"li\",[s._v(\"POST 方法会产生两个 TCP 数据包，浏览器会先将请求头发送给服务器，待服务器响应100 continue，浏览器再发送请求数据，服务器响应200 ok(返回数据)。这么看起来 \"),a(\"strong\",[s._v(\"GET 请求的传输会比 POST 快上一些\")]),s._v(\"（因为GET 方法只发送一个 TCP 数据包），但是实际上在网络良好的情况下它们的传输速度基本相同。\")])]),s._v(\" \"),a(\"h3\",{attrs:{id:\"小结\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[s._v(\"#\")]),s._v(\" 小结\")]),s._v(\" \"),a(\"p\",[s._v(\"get和post实际上都是Tcp链接，并无太大区别，但是由于http的规定以及浏览器/服务器的限制，导致他们在应用过程中可能会有所不同\"),a(\"br\"),s._v(\"\\n单纯获取资源的请求就规定为get\"),a(\"br\"),s._v(\"\\n修改服务器资源的请求就规定为post\"),a(\"br\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"在浏览器回退时是无害的，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"会再次提交请求。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"产生的\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"URL\")]),s._v(\"地址可以被Bookmark，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"不可以。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"请求会被浏览器主动cache，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"不会，除非手动设置。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"请求只能进行url编码，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"支持多种编码方式。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"请求参数会被完整保留在浏览器历史记录里，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"中的参数不会被保留。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"请求在\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"URL\")]),s._v(\"中传送的参数是有长度限制的，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"么有。\\n对参数的数据类型，\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"只接受\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"ASCII\")]),s._v(\"字符，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"没有限制。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"比\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"更不安全，因为参数直接暴露在\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"URL\")]),s._v(\"上，所以不能用来传递敏感信息。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\"参数通过\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"URL\")]),s._v(\"传递，\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"POST\")]),s._v(\"放在Request body中。\\n\")])])]),a(\"h2\",{attrs:{id:\"从输入url到显示页面，都经历了什么？\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#从输入url到显示页面，都经历了什么？\"}},[s._v(\"#\")]),s._v(\" 从输入url到显示页面，都经历了什么？\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"、首先，在浏览器地址栏中输入url。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"、浏览器先查看浏览器缓存\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\"系统缓存\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),s._v(\"路由器缓存，如果缓存中有，会直接在屏幕中显示页面内容。若没有，则跳到第三步操作。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"、在发送http请求前，需要域名解析\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"DNS\")]),s._v(\"解析\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"DNS\")]),s._v(\"（域名系统，Domain Name System）是互联网的一项核心服务，它作为可以将域名和\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"IP\")]),s._v(\"地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"IP\")]),s._v(\"地址。\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"，解析获取相应的\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"IP\")]),s._v(\"地址。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\"、浏览器向服务器发起tcp连接，与浏览器建立tcp三次握手。（\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"TCP\")]),s._v(\"即传输控制协议。\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"TCP\")]),s._v(\"连接是互联网连接协议集的一种。）\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\"、握手成功后，浏览器向服务器发送http请求，请求数据包。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"6\")]),s._v(\"、服务器处理收到的请求，将数据返回至浏览器。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"7\")]),s._v(\"、浏览器收到\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"HTTP\")]),s._v(\"响应。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"8\")]),s._v(\"、读取页面内容，浏览器渲染，解析html源码。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"9\")]),s._v(\"、生成Dom树、解析css样式、js交互。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\"、客户端和服务器交互。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"11\")]),s._v(\"、ajax查询。\\n\\n\")])])]),a(\"h2\",{attrs:{id:\"http状态码\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http状态码\"}},[s._v(\"#\")]),s._v(\" http状态码\")]),s._v(\" \"),a(\"p\",[s._v(\"常见的HTTP状态码\")]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\"开头 （请求成功）表示成功处理了请求的状态代码。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"200\")]),s._v(\"   （成功）  服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"201\")]),s._v(\"   （已创建）  请求成功并且服务器创建了新的资源。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"202\")]),s._v(\"   （已接受）  服务器已接受请求，但尚未处理。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"203\")]),s._v(\"   （非授权信息）  服务器已成功处理了请求，但返回的信息可能来自另一来源。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"204\")]),s._v(\"   （无内容）  服务器成功处理了请求，但没有返回任何内容。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"205\")]),s._v(\"   （重置内容） 服务器成功处理了请求，但没有返回任何内容。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"206\")]),s._v(\"   （部分内容）  服务器成功处理了部分 \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\" 请求。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"3\")]),s._v(\"开头 （请求被重定向）表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"300\")]),s._v(\"   （多种选择）  针对请求，服务器可执行多种操作。 \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"服务器可根据请求者\")]),s._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"user agent\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" 选择一项操作，或提供操作列表供请求者选择。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"301\")]),s._v(\"   （永久移动）  请求的网页已永久移动到新位置。 服务器返回此响应（对 \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\" 或 \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"HEAD\")]),s._v(\" 请求的响应）时，会自动将请求者转到新位置。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"302\")]),s._v(\"   （临时移动）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"303\")]),s._v(\"   （查看其他位置） 请求者应当对不同的位置使用单独的 \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\" 请求来检索响应时，服务器返回此代码。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"304\")]),s._v(\"   （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"305\")]),s._v(\"   （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"307\")]),s._v(\"   （临时重定向）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\"开头 （请求错误）这些状态代码表示请求可能出错，妨碍了服务器的处理。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"400\")]),s._v(\"   （错误请求） 服务器不理解请求的语法。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"401\")]),s._v(\"   （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"403\")]),s._v(\"   （禁止） 服务器拒绝请求。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"404\")]),s._v(\"   （未找到） 服务器找不到请求的网页。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"405\")]),s._v(\"   （方法禁用） 禁用请求中指定的方法。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"406\")]),s._v(\"   （不接受） 无法使用请求的内容特性响应请求的网页。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"407\")]),s._v(\"   （需要代理授权） 此状态代码与 \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"401\")]),s._v(\"（未授权）类似，但指定请求者应当授权使用代理。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"408\")]),s._v(\"   （请求超时）  服务器等候请求时发生超时。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"409\")]),s._v(\"   （冲突）  服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"410\")]),s._v(\"   （已删除）  如果请求的资源已永久删除，服务器就会返回此响应。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"411\")]),s._v(\"   （需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"412\")]),s._v(\"   （未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"413\")]),s._v(\"   （请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"414\")]),s._v(\"   （请求的 \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"URI\")]),s._v(\" 过长） 请求的 \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"URI\")]),s._v(\"（通常为网址）过长，服务器无法处理。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"415\")]),s._v(\"   （不支持的媒体类型） 请求的格式不受请求页面的支持。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"416\")]),s._v(\"   （请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"417\")]),s._v(\"   （未满足期望值） 服务器未满足\"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"期望\"')]),s._v(\"请求标头字段的要求。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\"开头（服务器错误）这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"500\")]),s._v(\"   （服务器内部错误）  服务器遇到错误，无法完成请求。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"501\")]),s._v(\"   （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"502\")]),s._v(\"   （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"503\")]),s._v(\"   （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"504\")]),s._v(\"   （网关超时）  服务器作为网关或代理，但是没有及时从上游服务器收到请求。 \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"505\")]),s._v(\"   （\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"HTTP\")]),s._v(\" 版本不受支持） 服务器不支持请求中所用的 \"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"HTTP\")]),s._v(\" 协议版本。\\n\\n\")])])]),a(\"h2\",{attrs:{id:\"本地存储技术\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#本地存储技术\"}},[s._v(\"#\")]),s._v(\" 本地存储技术\")]),s._v(\" \"),a(\"p\",[s._v(\"请描述一下 cookies sessionStorage和localstorage区别\"),a(\"br\"),s._v(\"\\ncookies:酷king\\nlocalstorage：洛克死多里\\nsessionStorage：赛神死多里\")]),s._v(\" \"),a(\"ol\",[a(\"li\",[s._v(\"相同点：都存储在客户端\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"不同点：\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1.\")]),s._v(\"存储大小\\n· cookie数据大小不能超过\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"4\")]),s._v(\"k。\\n· sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到\"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"5\")]),s._v(\"M或更大。\\n\")])])]),a(\"ol\",{attrs:{start:\"2\"}},[a(\"li\",[s._v(\"有效时间\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"· localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；\\n· sessionStorage  数据在当前浏览器窗口关闭后自动删除。\\n· cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭\\n\")])])]),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[s._v(\"数据与服务器之间的交互方式\")])]),s._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[s._v(\"· cookie的数据会自动的传递到服务器，服务器端也可以写cookie到客户端\\n· sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。\\n\")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}