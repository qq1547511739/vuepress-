{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{360:function(t,s,a){\"use strict\";a.r(s);var n=a(43),v=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"get和post请求的区别\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#get和post请求的区别\"}},[t._v(\"#\")]),t._v(\" get和post请求的区别\")]),t._v(\" \"),a(\"p\",[t._v(\"get和post都是http请求的方式\"),a(\"br\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"get请求\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#get请求\"}},[t._v(\"#\")]),t._v(\" get请求\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"GET 请求的表现形式，即请求的数据会附在 URL 之后（放在请求行中），以 ? 分割 URL 和传输数据，多个参数用 & 连接。\")]),t._v(\" \"),a(\"li\",[t._v(\"除此之外，根据 HTTP 规范，GET 用于信息获取，而且应该是安全和幂等的 。\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"安全性指的是非修改信息，即该操作用于获取信息而非修改信息。换句话说，GET请求一般不应产生副作用，也就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。\")])]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"幂等性 (Idempotence) 则指的是无论调用这个URL 多少次，都不会有不同的结果的 HTTP 方法。而在实际过程中，这个规定没有那么严格。例如在一个新闻应用中，新闻站点的头版不断更新，虽然第二次请求会返回不同的一批新闻，该操作仍然被认为是安全的和幂等的，因为它总是返回当前的新闻。\")])]),t._v(\" \"),a(\"ol\",{attrs:{start:\"3\"}},[a(\"li\",[t._v(\"GET 是会被浏览器主动缓存的，如果下一次传输的数据相同，那么就会返回缓存中的内容，以求更快地展示数据。\")]),t._v(\" \"),a(\"li\",[t._v(\"GET 方法的 URL 一般都具有长度限制，\"),a(\"strong\",[t._v(\"但是需要注意的是 HTTP 协议中并未规定 GET 请求的长度。这个长度限制主要是由浏览器和 Web 服务器所决定的，并且各个浏览器对长度的限制也各不相同。\")])]),t._v(\" \"),a(\"li\",[t._v(\"GET 方法只产生一个 TCP 数据包，浏览器会把请求头和请求数据一并发送出去，服务器响应 200 ok(返回数据)。\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"post请求方式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#post请求方式\"}},[t._v(\"#\")]),t._v(\" post请求方式\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[a(\"p\",[t._v(\"根据 HTTP 规范，POST 表示可能修改变服务器上的资源的请求。例如我们在刷知乎的时候对某篇文章进行点赞，就是提交的 POST 请求，因为它改变了服务器中的数据（该篇文章的点赞数）。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"POST 方法因为有可能修改服务器上的资源，所以它是不符合安全和幂等性的。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"从前面关于 POST 的请求报文也可以看出，POST 是将请求信息放置在请求数据中的，这也是 POST 和 GET 的一点不那么重要的区别。有一些博客的说法是 \"),a(\"strong\",[t._v(\"GET 请求的请求信息是放置在 URL 的而 POST 是放置在请求数据中的\")]),t._v(\"所以 POST 比 GET 更安全。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"因为 POST 方法的请求信息是放置在请求数据中的，所以它的请求信息是\"),a(\"strong\",[t._v(\"没有长度限制\")]),t._v(\"的。\")])]),t._v(\" \"),a(\"li\",[a(\"p\",[t._v(\"POST 方法会产生两个 TCP 数据包，浏览器会先将请求头发送给服务器，待服务器响应100 continue，浏览器再发送请求数据，服务器响应200 ok(返回数据)。这么看起来 \"),a(\"strong\",[t._v(\"GET 请求的传输会比 POST 快上一些\")]),t._v(\"（因为GET 方法只发送一个 TCP 数据包），但是实际上在网络良好的情况下它们的传输速度基本相同。\")])])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"小结\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#小结\"}},[t._v(\"#\")]),t._v(\" 小结\")]),t._v(\" \"),a(\"p\",[t._v(\"get和post实际上都是Tcp链接，并无太大区别，但是由于http的规定以及浏览器/服务器的限制，导致他们在应用过程中可能会有所不同\"),a(\"br\"),t._v(\"\\n单纯获取资源的请求就规定为get\"),a(\"br\"),t._v(\"\\n修改服务器资源的请求就规定为post\"),a(\"br\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-javascript extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"在浏览器回退时是无害的，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"会再次提交请求。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"产生的\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"地址可以被Bookmark，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"不可以。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求会被浏览器主动cache，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"不会，除非手动设置。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求只能进行url编码，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"支持多种编码方式。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求参数会被完整保留在浏览器历史记录里，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"中的参数不会被保留。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求在\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"中传送的参数是有长度限制的，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"么有。\\n对参数的数据类型，\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"只接受\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"ASCII\")]),t._v(\"字符，而\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"没有限制。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"比\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"更不安全，因为参数直接暴露在\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"上，所以不能用来传递敏感信息。\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"参数通过\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"传递，\"),a(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"放在Request body中。\\n\")])])])])}),[],!1,null,null,null);s.default=v.exports}}]);","extractedComments":[]}