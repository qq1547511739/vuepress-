{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{360:function(t,s,a){t.exports=a.p+\"assets/img/shuangxiang.f21bcd48.jpg\"},376:function(t,s,a){\"use strict\";a.r(s);var n=a(43),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[n(\"h2\",{attrs:{id:\"本地存储技术\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#本地存储技术\"}},[t._v(\"#\")]),t._v(\" 本地存储技术\")]),t._v(\" \"),n(\"p\",[t._v(\"请描述一下 cookies sessionStorage和localstorage区别\"),n(\"br\"),t._v(\"\\ncookies:酷king\\nlocalstorage：洛克死多里\\nsessionStorage：赛神死多里\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"相同点：都存储在客户端\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"不同点：\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1.\")]),t._v(\"存储大小\\n· cookie数据大小不能超过\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"k。\\n· sessionStorage和localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\"M或更大。\\n\")])])]),n(\"ol\",{attrs:{start:\"2\"}},[n(\"li\",[t._v(\"有效时间\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"· localStorage    存储持久数据，浏览器关闭后数据不丢失除非主动删除数据；\\n· sessionStorage  数据在当前浏览器窗口关闭后自动删除。\\n· cookie          设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭\\n\")])])]),n(\"ol\",{attrs:{start:\"3\"}},[n(\"li\",[t._v(\"数据与服务器之间的交互方式\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"· cookie的数据会自动的传递到服务器，服务器端也可以写cookie到客户端\\n· sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存。\\n\")])])]),n(\"h2\",{attrs:{id:\"数组去重\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组去重\"}},[t._v(\"#\")]),t._v(\" 数组去重\")]),t._v(\" \"),n(\"p\",[t._v(\"数组去重:\"),n(\"br\"),t._v(\"\\n编写一个方法去掉数组里面重复的内容\"),n(\"br\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" arr \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'abc'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'abcd'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'sss'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'2'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'d'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'t'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'2'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'ss'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'f'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'22'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'d'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//定义一个新的数组\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" s \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//遍历数组\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"arr\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"indexOf\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"arr\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"  \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//判断在s数组中是否存在，不存在则push到s数组中 此处的-1代表的是false\")]),t._v(\"\\n        s\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"push\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"arr\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\nconsole\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('//输出结果：[\"abc\", \"abcd\", \"sss\", \"2\", \"d\", \"t\", \"ss\", \"f\", \"22\"]')]),t._v(\"\\n\")])])]),n(\"p\",[n(\"br\"),n(\"br\"),n(\"br\"),n(\"br\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"http状态码\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http状态码\"}},[t._v(\"#\")]),t._v(\" http状态码\")]),t._v(\" \"),n(\"p\",[t._v(\"常见的HTTP状态码\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"开头 （请求成功）表示成功处理了请求的状态代码。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"200\")]),t._v(\"   （成功）  服务器已成功处理了请求。 通常，这表示服务器提供了请求的网页。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"201\")]),t._v(\"   （已创建）  请求成功并且服务器创建了新的资源。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"202\")]),t._v(\"   （已接受）  服务器已接受请求，但尚未处理。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"203\")]),t._v(\"   （非授权信息）  服务器已成功处理了请求，但返回的信息可能来自另一来源。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"204\")]),t._v(\"   （无内容）  服务器成功处理了请求，但没有返回任何内容。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"205\")]),t._v(\"   （重置内容） 服务器成功处理了请求，但没有返回任何内容。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"206\")]),t._v(\"   （部分内容）  服务器成功处理了部分 \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\" 请求。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),t._v(\"开头 （请求被重定向）表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"300\")]),t._v(\"   （多种选择）  针对请求，服务器可执行多种操作。 \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"服务器可根据请求者\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"user agent\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" 选择一项操作，或提供操作列表供请求者选择。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"301\")]),t._v(\"   （永久移动）  请求的网页已永久移动到新位置。 服务器返回此响应（对 \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\" 或 \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"HEAD\")]),t._v(\" 请求的响应）时，会自动将请求者转到新位置。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"302\")]),t._v(\"   （临时移动）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"303\")]),t._v(\"   （查看其他位置） 请求者应当对不同的位置使用单独的 \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\" 请求来检索响应时，服务器返回此代码。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"304\")]),t._v(\"   （未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"305\")]),t._v(\"   （使用代理） 请求者只能使用代理访问请求的网页。 如果服务器返回此响应，还表示请求者应使用代理。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"307\")]),t._v(\"   （临时重定向）  服务器目前从不同位置的网页响应请求，但请求者应继续使用原有位置来进行以后的请求。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"开头 （请求错误）这些状态代码表示请求可能出错，妨碍了服务器的处理。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"400\")]),t._v(\"   （错误请求） 服务器不理解请求的语法。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"401\")]),t._v(\"   （未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"403\")]),t._v(\"   （禁止） 服务器拒绝请求。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"404\")]),t._v(\"   （未找到） 服务器找不到请求的网页。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"405\")]),t._v(\"   （方法禁用） 禁用请求中指定的方法。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"406\")]),t._v(\"   （不接受） 无法使用请求的内容特性响应请求的网页。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"407\")]),t._v(\"   （需要代理授权） 此状态代码与 \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"401\")]),t._v(\"（未授权）类似，但指定请求者应当授权使用代理。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"408\")]),t._v(\"   （请求超时）  服务器等候请求时发生超时。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"409\")]),t._v(\"   （冲突）  服务器在完成请求时发生冲突。 服务器必须在响应中包含有关冲突的信息。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"410\")]),t._v(\"   （已删除）  如果请求的资源已永久删除，服务器就会返回此响应。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"411\")]),t._v(\"   （需要有效长度） 服务器不接受不含有效内容长度标头字段的请求。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"412\")]),t._v(\"   （未满足前提条件） 服务器未满足请求者在请求中设置的其中一个前提条件。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"413\")]),t._v(\"   （请求实体过大） 服务器无法处理请求，因为请求实体过大，超出服务器的处理能力。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"414\")]),t._v(\"   （请求的 \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URI\")]),t._v(\" 过长） 请求的 \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URI\")]),t._v(\"（通常为网址）过长，服务器无法处理。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"415\")]),t._v(\"   （不支持的媒体类型） 请求的格式不受请求页面的支持。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"416\")]),t._v(\"   （请求范围不符合要求） 如果页面无法提供请求的范围，则服务器会返回此状态代码。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"417\")]),t._v(\"   （未满足期望值） 服务器未满足\"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"期望\"')]),t._v(\"请求标头字段的要求。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\"开头（服务器错误）这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"500\")]),t._v(\"   （服务器内部错误）  服务器遇到错误，无法完成请求。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"501\")]),t._v(\"   （尚未实施） 服务器不具备完成请求的功能。 例如，服务器无法识别请求方法时可能会返回此代码。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"502\")]),t._v(\"   （错误网关） 服务器作为网关或代理，从上游服务器收到无效响应。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"503\")]),t._v(\"   （服务不可用） 服务器目前无法使用（由于超载或停机维护）。 通常，这只是暂时状态。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"504\")]),t._v(\"   （网关超时）  服务器作为网关或代理，但是没有及时从上游服务器收到请求。 \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"505\")]),t._v(\"   （\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"HTTP\")]),t._v(\" 版本不受支持） 服务器不支持请求中所用的 \"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"HTTP\")]),t._v(\" 协议版本。\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"http和https协议的区别\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http和https协议的区别\"}},[t._v(\"#\")]),t._v(\" HTTP和HTTPS协议的区别\")]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"HTTP和HTTPS协议的区别\")])]),t._v(\" \"),n(\"p\",[t._v(\"区别：\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。\")]),t._v(\" \"),n(\"li\",[t._v(\"http是超文本传输协议，信息是明文传输，https则是具有安全性的ssl加密传输协议。\")]),t._v(\" \"),n(\"li\",[t._v(\"http和https使用的是完全不同的连接方式，用的端口也不一样，前者是80，后者是443。\")]),t._v(\" \"),n(\"li\",[t._v(\"http的连接很简单，是无状态的；HTTPS协议是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比http协议安全。\")])]),t._v(\" \"),n(\"h2\",{attrs:{id:\"get和post请求的区别\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#get和post请求的区别\"}},[t._v(\"#\")]),t._v(\" get和post请求的区别\")]),t._v(\" \"),n(\"p\",[t._v(\"get和post都是http请求的方式\"),n(\"br\"),t._v(\" \"),n(\"strong\",[t._v(\"get请求\")])]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"GET 请求的表现形式，即请求的数据会附在 URL 之后（放在请求行中），以 ? 分割 URL 和传输数据，多个参数用 & 连接。\")]),t._v(\" \"),n(\"li\",[t._v(\"除此之外，根据 HTTP 规范，GET 用于信息获取，而且应该是安全和幂等的 。\")])]),t._v(\" \"),n(\"blockquote\",[n(\"p\",[t._v(\"安全性指的是非修改信息，即该操作用于获取信息而非修改信息。换句话说，GET请求一般不应产生副作用，也就是说，它仅仅是获取资源信息，就像数据库查询一样，不会修改，增加数据，不会影响资源的状态。\")])]),t._v(\" \"),n(\"blockquote\",[n(\"p\",[t._v(\"幂等性 (Idempotence) 则指的是无论调用这个URL 多少次，都不会有不同的结果的 HTTP 方法。而在实际过程中，这个规定没有那么严格。例如在一个新闻应用中，新闻站点的头版不断更新，虽然第二次请求会返回不同的一批新闻，该操作仍然被认为是安全的和幂等的，因为它总是返回当前的新闻。\")])]),t._v(\" \"),n(\"ol\",{attrs:{start:\"3\"}},[n(\"li\",[t._v(\"GET 是会被浏览器主动缓存的，如果下一次传输的数据相同，那么就会返回缓存中的内容，以求更快地展示数据。\")]),t._v(\" \"),n(\"li\",[t._v(\"GET 方法的 URL 一般都具有长度限制，\"),n(\"strong\",[t._v(\"但是需要注意的是 HTTP 协议中并未规定 GET 请求的长度。这个长度限制主要是由浏览器和 Web 服务器所决定的，并且各个浏览器对长度的限制也各不相同。\")])]),t._v(\" \"),n(\"li\",[t._v(\"GET 方法只产生一个 TCP 数据包，浏览器会把请求头和请求数据一并发送出去，服务器响应 200 ok(返回数据)。\")])]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"post请求方式\")])]),t._v(\" \"),n(\"ol\",[n(\"li\",[n(\"p\",[t._v(\"根据 HTTP 规范，POST 表示可能修改变服务器上的资源的请求。例如我们在刷知乎的时候对某篇文章进行点赞，就是提交的 POST 请求，因为它改变了服务器中的数据（该篇文章的点赞数）。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"POST 方法因为有可能修改服务器上的资源，所以它是不符合安全和幂等性的。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"从前面关于 POST 的请求报文也可以看出，POST 是将请求信息放置在请求数据中的，这也是 POST 和 GET 的一点不那么重要的区别。有一些博客的说法是 \"),n(\"strong\",[t._v(\"GET 请求的请求信息是放置在 URL 的而 POST 是放置在请求数据中的\")]),t._v(\"所以 POST 比 GET 更安全。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"因为 POST 方法的请求信息是放置在请求数据中的，所以它的请求信息是\"),n(\"strong\",[t._v(\"没有长度限制\")]),t._v(\"的。\")])]),t._v(\" \"),n(\"li\",[n(\"p\",[t._v(\"POST 方法会产生两个 TCP 数据包，浏览器会先将请求头发送给服务器，待服务器响应100 continue，浏览器再发送请求数据，服务器响应200 ok(返回数据)。这么看起来 \"),n(\"strong\",[t._v(\"GET 请求的传输会比 POST 快上一些\")]),t._v(\"（因为GET 方法只发送一个 TCP 数据包），但是实际上在网络良好的情况下它们的传输速度基本相同。\")])])]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"小结\")]),t._v(\"\\nget和post实际上都是Tcp链接，并无太大区别，但是由于http的规定以及浏览器/服务器的限制，导致他们在应用过程中可能会有所不同\"),n(\"br\"),t._v(\"\\n单纯获取资源的请求就规定为get\"),n(\"br\"),t._v(\"\\n修改服务器资源的请求就规定为post\"),n(\"br\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"在浏览器回退时是无害的，而\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"会再次提交请求。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"产生的\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"地址可以被Bookmark，而\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"不可以。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求会被浏览器主动cache，而\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"不会，除非手动设置。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求只能进行url编码，而\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"支持多种编码方式。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求参数会被完整保留在浏览器历史记录里，而\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"中的参数不会被保留。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"请求在\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"中传送的参数是有长度限制的，而\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"么有。\\n对参数的数据类型，\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"只接受\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"ASCII\")]),t._v(\"字符，而\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"没有限制。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"比\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"更不安全，因为参数直接暴露在\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"上，所以不能用来传递敏感信息。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"GET\")]),t._v(\"参数通过\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"URL\")]),t._v(\"传递，\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"POST\")]),t._v(\"放在Request body中。\\n\")])])]),n(\"h2\",{attrs:{id:\"什么是mvvm？\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是mvvm？\"}},[t._v(\"#\")]),t._v(\" 什么是mvvm？\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"\\n它是将“数据模型数据双向绑定”的思想作为核心，因此在View和Model之间没有联系，\\n通过ViewModel进行交互，而且Model和ViewModel之间的交互是双向的，\\n因此视图的数据的变化会同时修改数据源，而数据源数据的变化也会立即反应view。\\n微信小程序前端使用mvvm。\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"递归\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#递归\"}},[t._v(\"#\")]),t._v(\" 递归\")]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"认识递归\")])]),t._v(\" \"),n(\"p\",[t._v(\"满足以下三个特点就是递归：\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"函数自己调用自己\")]),t._v(\" \"),n(\"li\",[t._v(\"一般情况有参数\")]),t._v(\" \"),n(\"li\",[t._v(\"一般情况下有return\")])]),t._v(\" \"),n(\"p\",[t._v(\"递归方法:\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"首先去找临界值，即无需计算，获得的值。\")]),t._v(\" \"),n(\"li\",[t._v(\"找这一次和上一次的关系\")]),t._v(\" \"),n(\"li\",[t._v(\"假设当前函数已经可以使用，调用自身计算上一次\")])]),t._v(\" \"),n(\"p\",[t._v(\"弊端：短时间开启大量的内存，一次性再释放内存，会卡顿或者死机\"),n(\"br\"),t._v(\"\\n在没有算出那个临界值之前，会开启所有的内存计算每一个公式，算出来之后才会依次释放内存\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 计算1~n的和？\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sum\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"n\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<=\")]),t._v(\" n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    res \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+=\")]),t._v(\" i\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" res\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sum\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"100\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 递归方法计算1~n的和？\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sum\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"n\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"==\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sum\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"n \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"sum\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"100\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),n(\"h2\",{attrs:{id:\"闭包\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#闭包\"}},[t._v(\"#\")]),t._v(\" 闭包\")]),t._v(\" \"),n(\"p\",[t._v(\"什么是闭包，如何使用它，为什么要使用它？\")]),t._v(\" \"),n(\"p\",[t._v(\"满足以下特点的就是闭包：\"),n(\"br\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"函数嵌套函数\")]),t._v(\" \"),n(\"li\",[t._v(\"内部函数使用外部函数的形参和变量\")]),t._v(\" \"),n(\"li\",[t._v(\"被引用的形参和变量就不会被(垃圾回收机制所回收)\")])]),t._v(\" \"),n(\"p\",[t._v(\"闭包的作用：\"),n(\"br\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"可以是变量常驻在内存当中\")]),t._v(\" \"),n(\"li\",[t._v(\"可以读取函数内部的变量\")]),t._v(\" \"),n(\"li\",[t._v(\"避免全局变量污染(开发中如果声明的是全局变量的话，多人协作难免会出现重复的变量)\")]),t._v(\" \"),n(\"li\",[t._v(\"可以声明私有成员\")])]),t._v(\" \"),n(\"p\",[t._v(\"闭包的缺点：\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"闭包使函数中的变量都被保存在内存中，内存消耗很大，所以不能滥用闭包否则会造成网页的性能问题\")])]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//声明全局变量，会造成变量我污染\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//2\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//3\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"shwo\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//4\")]),t._v(\"\\n\\n\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//3\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//3\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//报错(回收机制)\")]),t._v(\"\\n\\n\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"aaa\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"bbb\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" bbb\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" ccc \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"aaa\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ccc\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ccc\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//局部变量访问不到\")]),t._v(\"\\n\")])])]),n(\"p\",[t._v(\"立即执行函数：\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//两个括号，先声明这个函数，再执行\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'hello world'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" ccc \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        a\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \\n\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ccc\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//3\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"ccc\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//4\")]),t._v(\"\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"a\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//报错\")]),t._v(\"\\n\")])])]),n(\"h2\",{attrs:{id:\"从输入url到显示页面，都经历了什么？\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#从输入url到显示页面，都经历了什么？\"}},[t._v(\"#\")]),t._v(\" 从输入url到显示页面，都经历了什么？\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"、首先，在浏览器地址栏中输入url。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"、浏览器先查看浏览器缓存\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"系统缓存\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"路由器缓存，如果缓存中有，会直接在屏幕中显示页面内容。若没有，则跳到第三步操作。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"、在发送http请求前，需要域名解析\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DNS\")]),t._v(\"解析\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"DNS\")]),t._v(\"（域名系统，Domain Name System）是互联网的一项核心服务，它作为可以将域名和\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IP\")]),t._v(\"地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IP\")]),t._v(\"地址。\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"，解析获取相应的\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"IP\")]),t._v(\"地址。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\"、浏览器向服务器发起tcp连接，与浏览器建立tcp三次握手。（\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"TCP\")]),t._v(\"即传输控制协议。\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"TCP\")]),t._v(\"连接是互联网连接协议集的一种。）\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\"、握手成功后，浏览器向服务器发送http请求，请求数据包。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"6\")]),t._v(\"、服务器处理收到的请求，将数据返回至浏览器。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"7\")]),t._v(\"、浏览器收到\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"HTTP\")]),t._v(\"响应。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"8\")]),t._v(\"、读取页面内容，浏览器渲染，解析html源码。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"9\")]),t._v(\"、生成Dom树、解析css样式、js交互。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"、客户端和服务器交互。\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"11\")]),t._v(\"、ajax查询。\\n\\n\")])])]),n(\"h2\",{attrs:{id:\"选择题\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#选择题\"}},[t._v(\"#\")]),t._v(\" 选择题\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"w3c 制定的 javascript 标准事件模型，以下正确的顺序以及描述是\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"A\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"事件捕获\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件冒泡\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"B\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"事件捕获\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件处理\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件冒泡\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"C\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"事件冒泡\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件处理\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"D\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"事件冒泡\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件处理\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件捕获\\n\"),n(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[t._v(\"E\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"事件处理\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件捕获\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"事件冒泡\\n答案 b\\n\")])])]),n(\"h2\",{attrs:{id:\"v-if和v-show的区别\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#v-if和v-show的区别\"}},[t._v(\"#\")]),t._v(\" v-if和v-show的区别\")]),t._v(\" \"),n(\"p\",[t._v(\"请问 v-if 和 v-show 有什么区别？\")]),t._v(\" \"),n(\"p\",[t._v(\"a.实现方式： v-if是根据后面数据的真假值判断直接从Dom树上删除或重建元素节点。  v-show只是在修改元素的css样式，也就是display的属性值，元素始终在Dom树上。\")]),t._v(\" \"),n(\"p\",[t._v(\"b.编译过程：v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；  v-show只是简单的基于css切换；\")]),t._v(\" \"),n(\"p\",[t._v(\"c.编译条件：v-if是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译； v-show是在任何条件下（首次条件是否为真）都被编译，然后被缓存，而且DOM元素始终被保留；\")]),t._v(\" \"),n(\"p\",[t._v(\"d.性能消耗：v-if有更高的切换消耗，不适合做频繁的切换；  v-show有更高的初始渲染消耗，适合做频繁的额切换；\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"vue双向数据绑定\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue双向数据绑定\"}},[t._v(\"#\")]),t._v(\" vue双向数据绑定\")]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"vue双向数据绑定\")]),n(\"br\"),t._v(\"\\nVue是采用数据劫持结合发布/订阅模式的方式\"),n(\"br\"),t._v(\"\\n通过Object.defineProperty()来劫持各个属性的setter，getter\"),n(\"br\"),t._v(\"\\n在数据变动时发布消息给订阅者，触发相应的监听回调。\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"Object.defineProperty()\"),n(\"br\"),t._v(\"\\n读法：o波j.d烦 泼播踢\"),n(\"br\")]),t._v(\" \"),n(\"ol\",[n(\"li\",[t._v(\"实现一个监听器Observer，用来劫持并监听所有属性，如果有变动的，就通知订阅者。\")]),t._v(\" \"),n(\"li\",[t._v(\"实现一个订阅者Watcher，可以收到属性的变化通知并执行相应的函数，从而更新视图。\")]),t._v(\" \"),n(\"li\",[t._v(\"实现一个解析器Compile，可以扫描和解析每个节点的相关指令，并根据初始化模板数据以及初始化相应的订阅器。\")])]),t._v(\" \"),n(\"p\",[n(\"img\",{attrs:{src:a(360),alt:\"text\"}})]),t._v(\" \"),n(\"h2\",{attrs:{id:\"vue中-key-值的作用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#vue中-key-值的作用\"}},[t._v(\"#\")]),t._v(\" vue中 key 值的作用\")]),t._v(\" \"),n(\"p\",[t._v(\"使用key来给每个节点做一个唯一标识\"),n(\"br\"),t._v(\"\\nkey的作用主要是为了\"),n(\"strong\",[t._v(\"高效的更新虚拟DOM\")]),t._v(\"。另外vue中在使用相同标签名元素的过渡切换时，也会使用到key属性，其目的也是为了让vue可以区分它们，\"),n(\"br\"),t._v(\"\\n否则vue只会替换其内部属性而不会触发过渡效果。\"),n(\"br\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"let-const的解释\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#let-const的解释\"}},[t._v(\"#\")]),t._v(\" let const的解释\")]),t._v(\" \"),n(\"p\",[t._v(\"var的设计可以看成JavaScript语言设计上的错误，这种错误多半不能修复和移除\"),n(\"br\"),t._v(\"\\n我们可以将let看成更完美的var\"),n(\"br\"),t._v(\"\\nJS中使用var来声明一个变量时, 变量的作用域主要是和函数的定义有关\"),n(\"br\"),t._v(\"\\nes5只有function有作用域，ES5中的var是没有块级作用域的(if/for)\"),n(\"br\"),t._v(\"\\n针对于其他块定义来说是没有作用域的，比如if/for等，这在我们开发中往往会引起一些问题\"),n(\"br\"),t._v(\"\\nES6中,加入了let, let它是有if和for的块级作用域 \"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"let 关键字是用来声明变量   更过分，只要遇到大括号就形成作用域\"),n(\"br\"),t._v(\"\\n【注】let关键字声明的变量，所在作用域叫做块级作用域。\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"const 声明变量，变量值只能在声明的时候确定，后续是没有办法修改的。\"),n(\"br\"),t._v(\"\\n【注】const声明常量(变量没有办法改);\"),n(\"br\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 一旦给const修饰的标识符被赋值之后, 不能修改\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在使用const定义标识符,必须进行赋值\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" name \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'why'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    name \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'abc'\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// const的变量不能被修改，所以还是why\")]),t._v(\"\\n    console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \\n\\n    \\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 常量的含义是指向的对象不能修改, 但是可以改变对象内部的属性.\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" obj \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        name\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'taotao'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// obj = {}  这样改会报错\")]),t._v(\"\\n    obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'jiapeng'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//这样改不会报错\")]),t._v(\"\\n    console\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"name\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),n(\"h2\",{attrs:{id:\"箭头函数\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#箭头函数\"}},[t._v(\"#\")]),t._v(\" 箭头函数\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"    箭头函数\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"新潮的函数写法\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"注\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\"作用：适当的省略函数中的 \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\"和\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\"关键字\\n    不利：代码可读性减弱，阅读时间花费多\\n\\n    注：箭头函数需注意部分\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\"，箭头函数不能用\"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"2\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"，箭头函数如果返回值是一个对象，一定要加\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n    普通：\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"show\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    返回值为对象：\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"show\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 3,箭头函数中的this指向的是上一层函数的主人\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" person \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        username\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'钢铁侠'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// show: function(){\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     alert(person.username)\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     alert(this.username)\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//     //此处两者alert指向同一个\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// }\")]),t._v(\"\\n\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"person\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"username\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"username\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n            \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//此处this指向window\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"p\",[t._v(\"例如：\")]),t._v(\" \"),n(\"div\",{staticClass:\"language-javascript extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-javascript\"}},[n(\"code\",[t._v(\"    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//1，无参数，无返回值\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'hello word'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"show\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'hello word'\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//2,有一个参数，无返回值\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"xxx\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"num\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"num\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"xxx\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"num\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"num\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//3,有一个参数有返回值\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" x \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"x\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" x\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n        \\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"add\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"x\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" x \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//4,多个参数，有返回值\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" x \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" y \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"20\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"show\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"x\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"y\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" y\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"show\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),n(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"x\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"y\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),n(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"x\"),n(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\"y\"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),n(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),n(\"h2\",{attrs:{id:\"绝对定位和相对定位的区别\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#绝对定位和相对定位的区别\"}},[t._v(\"#\")]),t._v(\" 绝对定位和相对定位的区别\")]),t._v(\" \"),n(\"p\",[t._v(\"一：绝对定位  position：absolute (泼赛神：啊波死路)\"),n(\"br\"),t._v(\"\\n绝对定位是相对于元素最近的已定位的祖先元素（即是设置了绝对定位或者相对定位的祖先元素）。如果元素没有已定位的祖先元素，那么它的位置则是相对于最初的包含块（body）。\"),n(\"br\"),t._v(\"\\n绝对定位本身与文档流无关，因此不占空间，普通文档流中的元素的布局就当绝对定位的元素不存时一样，所以 它们可以覆盖页面上其他的元素，且可以通过z-index属性来控制这些层的对方顺序。\"),n(\"br\"),t._v(\" \"),n(\"strong\",[t._v(\"脱离文档流\")])]),t._v(\" \"),n(\"p\",[t._v(\"二：相对定位  position：relative(威了踢死)\"),n(\"br\"),t._v(\"\\n相对定位是相对于元素在文档中的\"),n(\"strong\",[t._v(\"初始位置\")]),t._v(\"——首先它出现在它所在的位置上（即不设置position时的位置，然后通过设置垂直或水平位置，让这个元素“相对于”它的原始起点进行移动；注意，在使用相对定位时，无论是否进行移动，\"),n(\"strong\",[t._v(\"元素仍然占据原来的空间\")]),t._v(\"。因此，移动元素会导致它覆盖其它框。\"),n(\"br\"),t._v(\" \"),n(\"strong\",[t._v(\"不脱离文档流\")]),n(\"br\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"水平垂直居中方法\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#水平垂直居中方法\"}},[t._v(\"#\")]),t._v(\" 水平垂直居中方法\")]),t._v(\" \"),n(\"p\",[t._v(\"Flex 方案\"),n(\"br\"),t._v(\"\\nGrid 方案\"),n(\"br\"),t._v(\"\\nabsolute(啊波死路) + transform(穿死货)\"),n(\"br\"),t._v(\"\\nabsolute + calc\"),n(\"br\"),t._v(\"\\nabsolute + 负 margin\"),n(\"br\"),t._v(\"\\nabsolute + margin: auto\"),n(\"br\"),t._v(\"\\nwriting-mode\"),n(\"br\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"深拷贝浅拷贝\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#深拷贝浅拷贝\"}},[t._v(\"#\")]),t._v(\" 深拷贝浅拷贝\")]),t._v(\" \"),n(\"p\",[t._v(\"最简单区分深浅拷贝的方法\"),n(\"br\"),t._v(\"\\n假设a复制了b，当修改a时，看b是否会发生改变，b变了就是深拷贝，b没有变化就是浅拷贝\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"深拷贝：\"),n(\"br\"),t._v(\"\\n创造出一个一模一样的新对象，新对象跟原对象不共享内存，修改新对象不会更改原对象\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"例子：你从我的电脑拷贝一份文件到你的电脑，我修改我电脑里面的文件并不会修改你电脑里的文件\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"浅拷贝：\"),n(\"br\"),t._v(\"\\n只复制该对象的地址，不是复制对象的本身，新旧对象共享同一块内存\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"例子：我们两个人同用一个博客账号，当你修改博客里面的内容，我们两个看到的博客内容都是经过修改的\"),n(\"br\")]),t._v(\" \"),n(\"h2\",{attrs:{id:\"防抖与节流\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#防抖与节流\"}},[t._v(\"#\")]),t._v(\" 防抖与节流\")]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"防抖\")]),n(\"br\"),t._v(\"\\n让函数在停止触发事件后的一段时间再执行\"),n(\"br\"),t._v(\"\\n在规定的时间内，只让最后一次生效，前面的不生效，就是指触发事件后在n秒内函数只执行一次，如果在n秒内又触发了事件，则重新计算时间\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"用于：输入框搜索，验证码\"),n(\"br\")]),t._v(\" \"),n(\"p\",[n(\"strong\",[t._v(\"节流\")]),n(\"br\"),t._v(\"\\n限制一个函数在一定时间内只能执行一次，只让函数触发的第一次生效，后面的不生效\"),n(\"br\")]),t._v(\" \"),n(\"p\",[t._v(\"用于：表单提交\"),n(\"br\")])])}),[],!1,null,null,null);s.default=r.exports}}]);","extractedComments":[]}